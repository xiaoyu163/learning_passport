# Generated by Django 4.1.3 on 2023-06-12 09:55

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone
import users.models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('email', models.EmailField(max_length=254, unique=True, verbose_name='email adress')),
                ('full_name', models.CharField(max_length=50)),
                ('password', models.CharField(max_length=128)),
                ('last_login', models.DateTimeField(auto_now=True)),
                ('role', models.CharField(choices=[('SUPER ADMIN', 'SUPER ADMIN'), ('ADMIN', 'ADMIN'), ('HEAD OF DEPARTMENT', 'HEAD OF DEPARTMENT'), ('LECTURER', 'LECTURER'), ('STUDENT', 'STUDENT')], default='STUDENT', max_length=20)),
                ('is_active', models.BooleanField(default=True)),
                ('contact', models.CharField(max_length=20, null=True)),
                ('address', models.CharField(max_length=100, null=True)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
            managers=[
                ('objects', users.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='Organisation',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('year', models.IntegerField()),
                ('internal', models.BooleanField()),
                ('file', models.FileField(upload_to='')),
            ],
        ),
        migrations.CreateModel(
            name='Student',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('matric_no', models.CharField(max_length=10)),
                ('enrol_year', models.DateField()),
                ('grad_year', models.DateField()),
                ('program', models.SmallIntegerField(choices=[(1, 'Bachelor of Arts Chinese Studies'), (2, 'Master of Chinese Studies (Coursework)'), (3, 'Master of Arts (Research)'), (4, 'Doctor of Philosophy (Ph.D)')])),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.PROTECT, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Teacher',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('position', models.SmallIntegerField(choices=[(1, 'Adjunct Professor'), (2, 'Associate Professor'), (3, 'Senior Lecturer'), (4, 'Lecturer'), (5, 'Post Doctoral Research Fellow')])),
                ('lecturer', models.OneToOneField(on_delete=django.db.models.deletion.PROTECT, to=settings.AUTH_USER_MODEL)),
                ('students', models.ManyToManyField(to='users.student')),
            ],
        ),
    ]
